---
name: GLuaTest Tester


on:
  workflow_call:
    inputs:
      server-cfg:
        type: string
        required: false
        description: "A path (relative to project directory) with extra server config options"
        default: "gluatest_custom.cfg"

      requirements:
        type: string
        required: false
        description: "A path (relative to project directory) with a list of all requirements to test this project"
        default: "gluatest_requirements.txt"

      gamemode:
        type: string
        required: false
        description: "The name of the gamemode for the test server to run. (You must list the gamemode as a requirement)"
        default: "sandbox"

      collection:
        type: string
        required: false
        description: "The workshop ID of the collection for the test server to use"

      ssh-private-key:
        type: string
        required: false
        description: "The Private SSH key to use when cloning the dependencies"

      github-token:
        type: string
        required: false
        description: "A GitHub Personal Access Token"

jobs:
  test:
    name: "Run tests"
    runs-on: ubuntu-18.04

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
        with:
          path: project

      - name: Set up output files
        run: |
          cd $GITHUB_WORKSPACE
          touch $GITHUB_WORKSPACE/project/${{ inputs.requirements }}
          echo "gluatest_github_output 1" >> $GITHUB_WORKSPACE/project/${{ inputs.server-cfg }}

      - name: Get latest GLuaTest version
        id: latest-tag-getter
        run: |
          cd $GITHUB_WORKSPACE

          git clone --depth 1 https://github.com/CFC-Servers/GLuaTest.git gluatest
          cd ./gluatest
          cp docker/docker-compose.yml $GITHUB_WORKSPACE/docker-compose.yml

          git fetch --quiet --tags
          latest="$(git describe --tags `git rev-list --tags --max-count=1`)"
          echo "Latest Tag: $latest"
          echo "LATEST_TAG=$latest" >> $GITHUB_OUTPUT

          cd $GITHUB_WORKSPACE

      - name: Pull latest test runner
        run: docker-compose pull

      - name: Run GLuaTest
        env:
          REQUIREMENTS: "${{ github.workspace }}/project/${{ inputs.requirements }}"
          CUSTOM_SERVER_CONFIG: "${{ github.workspace }}/project/${{ inputs.server-cfg }}"
          PROJECT_DIR: "${{ github.workspace }}/project"
          GAMEMODE: "${{ inputs.gamemode }}"
          COLLECTION_ID: "${{ inputs.collection }}"
          SSH_PRIVATE_KEY: "${{ inputs.ssh-private-key }}"
          GITHUB_TOKEN: "${{ inputs.github-token }}"

        run: |
          docker-compose up --no-log-prefix --exit-code-from runner
          exitstatus=$?

          if [ $exitstatus -ne 0 ]; then
            exit $exitstatus
          fi
