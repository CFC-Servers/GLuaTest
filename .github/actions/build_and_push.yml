name: Build and Push (Single)
description: "Build and push GLuaTest for the given gmod branch"

inputs:
  gmod_branch:
    description: "The branch to build. Must be 'public' or 'x86-64'"
    required: true
    default: "public"
  tag_name:
    description: "Tag name for the Docker image (or version tag)"
    required: true
  release:
    type: boolean
    description: "Is this a full release?"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Get docker-slim
      run: |
        SLIM_VERSION=1.40.10

        curl -L -o ds.tar.gz https://downloads.dockerslim.com/releases/$SLIM_VERSION/dist_linux.tar.gz
        tar -xvzf ds.tar.gz
        mv dist_linux/* $GITHUB_WORKSPACE
        rm -rfv ds.tar.gz dist_linux/

    - name: Build starter image
      run: |
        cd $GITHUB_WORKSPACE/docker

        GLUATEST_REF=${{ inputs.tag_name }}
        docker build --build-arg="GMOD_BRANCH=${{ inputs.gmod_branch }}" --build-arg="GLUATEST_REF=$GLUATEST_REF" --tag gluatest_fat:latest .

    - name: Discern Game Version
      run: |
        # Create temporary container
        id=$(docker create gluatest_fat:latest)

        # Copy its manifest file
        docker cp $id:/home/steam/gmodserver/steamapps/appmanifest_4020.acf $GITHUB_WORKSPACE/appmanifest_4020.acf

        # Remove temporary container
        docker rm $id

        # Extract the version
        cat $GITHUB_WORKSPACE/appmanifest_4020.acf | grep "buildid\"" | awk -F '"' '/"buildid"/ {print $4}' > $GITHUB_WORKSPACE/gmod_buildid.txt

        # Cleanup
        rm $GITHUB_WORKSPACE/appmanifest_4020.acf

        echo "Game BuildID: $(cat $GITHUB_WORKSPACE/gmod_buildid.txt)"

    - name: Make slim image
      run: |
        cd $GITHUB_WORKSPACE/docker

        if [ "${{ inputs.gmod_branch }}" = "x86-64" ]; then
          BASE=ghcr.io/cfc-servers/gluatest/64bit
        else
          BASE=ghcr.io/cfc-servers/gluatest
        fi

        rawVersionTag=${{ inputs.tag_name }}

        id=$(cat $GITHUB_WORKSPACE/gmod_buildid.txt)
        $GITHUB_WORKSPACE/docker-slim build \
          --target gluatest_fat:latest \
          --http-probe-off \
          --continue-after 30 \
          --show-clogs --show-blogs \
          --tag $BASE:$rawVersionTag \
          --tag $BASE:gamebuild-$publicID

        # Tag image with "0.27" if we push tag "0.27.5"
        # but not if we push tag "0.27-pre5"
        parentMinorVersion=${rawVersionTag%.*}
        if [[ $parentMinorVersion != "0" ]]; then
          echo "::warning:: Tagging with parent minor version: $parentMinorVersion"
          docker tag $BASE:$rawVersionTag $BASE:$parentMinorVersion
        fi

        if [ "${{ inputs.release }}" = "true" ]; then
          echo "::warning:: Tagging this release as the latest!"
          docker tag $BASE:$rawVersionTag $BASE:latest
        fi

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag and push slim image
      run: |
        if [ "${{ inputs.gmod_branch }}" = "x86-64" ]; then
          BASE=ghcr.io/cfc-servers/gluatest/64bit
        else
          BASE=ghcr.io/cfc-servers/gluatest
        fi

        docker push "$BASE" --all-tags
